name: Integration Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run integration tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  integration-test:
    name: Integration Test - Mock Deploy
    runs-on: ubuntu-latest
    services:
      # Mock Nomad server for testing
      nomad:
        image: hashicorp/nomad:1.7
        ports:
          - 4646:4646
        env:
          NOMAD_LOCAL_CONFIG: |
            data_dir = "/tmp/nomad"
            server {
              enabled = true
              bootstrap_expect = 1
            }
            client {
              enabled = true
            }
        options: >-
          --health-cmd="nomad version"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Create test configuration
        run: |
          mkdir -p /tmp/molecule-test
          cat > /tmp/molecule-test/config.yaml << 'EOF'
          standard_urls:
            - service: "test-service"
              url: "http://localhost:8080"
              icon: "http://localhost:8080/favicon.ico"

          nomad:
            address: "http://localhost:4646"

          apikey: "test-key"

          server_config:
            host: "0.0.0.0"
            port: 8081
          EOF

      - name: Build application
        run: go build -o /tmp/molecule-test/molecule .

      - name: Wait for Nomad to be ready
        run: |
          timeout 60s bash -c 'until curl -f http://localhost:4646/v1/status/leader; do sleep 2; done'

      - name: Start application in background
        run: |
          cd /tmp/molecule-test
          ./molecule &
          echo $! > molecule.pid
          sleep 5

      - name: Test health endpoint
        run: |
          curl -f http://localhost:8081/health

      - name: Test web interface
        run: |
          curl -f http://localhost:8081/ -o /tmp/index.html
          grep -q "molecule" /tmp/index.html

      - name: Test API endpoints
        run: |
          # Test standard URLs endpoint
          curl -f http://localhost:8081/v1/urls
          
          # Test services endpoint
          curl -f http://localhost:8081/v1/services

      - name: Test API with authentication
        run: |
          # Test authenticated endpoint
          curl -f -H "X-API-Key: test-key" http://localhost:8081/v1/services

      - name: Test API spec endpoint
        run: |
          curl -f http://localhost:8081/api/spec -o /tmp/spec.yaml
          grep -q "openapi" /tmp/spec.yaml

      - name: Stop application
        run: |
          if [ -f /tmp/molecule-test/molecule.pid ]; then
            kill $(cat /tmp/molecule-test/molecule.pid) || true
          fi

      - name: Check application logs
        if: always()
        run: |
          echo "Application should have started and responded to requests"
          echo "Integration test completed successfully"

  load-test:
    name: Load Test
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Install hey (load testing tool)
        run: |
          wget https://github.com/rakyll/hey/releases/latest/download/hey_linux_amd64
          chmod +x hey_linux_amd64
          sudo mv hey_linux_amd64 /usr/local/bin/hey

      - name: Create test configuration
        run: |
          mkdir -p /tmp/molecule-test
          cat > /tmp/molecule-test/config.yaml << 'EOF'
          standard_urls:
            - service: "load-test-service"
              url: "http://localhost:8080"

          nomad:
            address: "http://nomad.example.com:4646"

          apikey: "load-test-key"

          server_config:
            host: "0.0.0.0"
            port: 8082
          EOF

      - name: Build and start application
        run: |
          go build -o /tmp/molecule-test/molecule .
          cd /tmp/molecule-test
          ./molecule &
          echo $! > molecule.pid
          sleep 5

      - name: Run load test on health endpoint
        run: |
          hey -n 100 -c 10 http://localhost:8082/health

      - name: Run load test on web interface
        run: |
          hey -n 100 -c 10 http://localhost:8082/

      - name: Run load test on API endpoints
        run: |
          hey -n 50 -c 5 http://localhost:8082/v1/urls

      - name: Stop application
        if: always()
        run: |
          if [ -f /tmp/molecule-test/molecule.pid ]; then
            kill $(cat /tmp/molecule-test/molecule.pid) || true
          fi